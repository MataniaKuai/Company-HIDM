package com.hidm.coo.service.impl;

import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.hidm.coo.dao.MFGBaseDao;
import com.hidm.coo.entity.EQtype;
import com.hidm.coo.entity.MFGBase;
import com.hidm.coo.service.EQtypeService;
import com.hidm.coo.service.MFGBaseService;
import com.hidm.coo.util.SAPConn;
import com.hidm.coo.vo.EQtypeSearchVo;
import com.hidm.coo.vo.EQtypeVo;
import com.hidm.coo.vo.MFGBaseSearchVo;
import com.hidm.coo.vo.MFGBaseVo;
import com.hidm.coo.vo.UserBaseVo;
import com.sap.conn.jco.JCoDestination;
import com.sap.conn.jco.JCoFunction;
import com.sap.conn.jco.JCoParameterList;
import com.sap.conn.jco.JCoTable;

@Service(value = "mfgBaseService")
public class MFGBaseServiceImpl implements MFGBaseService {
	private static Logger log = Logger.getLogger(MFGBaseServiceImpl.class);
    @Autowired
    private MFGBaseDao mfgBaseDao;
    @Autowired
    private SAPConn sapConService;
    @Autowired
    private EQtypeService eqTypeService;
    @Override
    public int insert(MFGBase mfgBase) {
        return mfgBaseDao.insert(mfgBase);
    }

    @Override
    public void updateById(MFGBase mfgBase) {
        mfgBaseDao.updateById(mfgBase);
    }

    @Override
    public int count(MFGBaseSearchVo mfgBaseVO) {
        return mfgBaseDao.count(mfgBaseVO);
    }

    @Override
    public List<MFGBaseVo> selectList(MFGBaseSearchVo mfgBaseVO) {
        return mfgBaseDao.selectList(mfgBaseVO);
    }

    @Override
    public void deleteByIds(Long[] ids) {
        mfgBaseDao.deleteByIds(ids);
    }

    @Override
    public List<MFGBaseVo> selectAll() {
        return mfgBaseDao.selectAll();
    }

    @Override
    public List<MFGBaseVo> selectInfoByIds(Long[] ids) {
        return mfgBaseDao.selectInfoByIds(ids);
    }
    
    @Override
    public void deleteByUserBaseIds(Long[] ids) {
    	mfgBaseDao.deleteByUserBaseIds(ids);
    }
    
    @Override
    public MFGBase synchToSap(MFGBase mfgBase) {
    	  boolean success = false;
          JCoFunction function = null;
          JCoDestination destination = sapConService.connect();                                                                                                                                              
          JCoTable table = null;        
          try {
          	 boolean hasData = false;
               function = destination.getRepository().getFunction("ZCOO_JAVATOSAP_004");        
               JCoParameterList input = function.getImportParameterList();
               EQtype eqType = new EQtype();
               eqType.setEqType(mfgBase.getEqTypeId());
               EQtypeSearchVo eqTypeSearchVo = new EQtypeSearchVo();
               List<EQtypeVo> eqTypeList = eqTypeService.selectList(eqTypeSearchVo);                      
               hasData = true;
               input.setValue("IV_EQTYPEID", "100");
               input.setValue("IV_EQTYPE", eqTypeList.get(0).getId());
               input.setValue("IV_MODULE", mfgBase.getModule());
               input.setValue("IV_VENDORID", "100");
               input.setValue("IV_VENDOR", mfgBase.getVendor());
               input.setValue("IV_MODELID", "100");
               input.setValue("IV_MODEL", mfgBase.getModel());
               input.setValue("IV_MFGMANMACHINE", mfgBase.getManMachine());
               input.setValue("IV_MFGSHIFT", mfgBase.getShift());                  
               if(hasData) {
              	 log.info("begin to call SAP to mfgbase." + input.toXML());
                   function.execute(destination);
                   table = function.getTableParameterList().getTable("T_MESSAGE");
                   log.info("finish to call SAP to mfgbase description. T_MESSAGE: " + table.toXML());
                   table.firstRow();
                   String sapError = "";
                   for (int i = 0; i < table.getNumRows(); i++, table.nextRow()) {
                       String ok = table.getString("ZIS_OK");
                       if ("S".equals(ok)) {
                           success = true;
                           
                       } else {
                           String message = table.getString("MSG");
                           sapError = sapError + "[" + message + "]";
                           log.error("Fail to mfgbase. ok:" + ok + ", message:" + message);
                       }
                   }
               } else {
              	 log.error("Fail to mfgbase, no data." );
               }
          	
          } catch(Exception e) {
          	log.error("Failed to mfgbase. success: " + success, e);
          }              
    	return mfgBase;
    }
}
