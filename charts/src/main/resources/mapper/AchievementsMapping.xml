<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hidm.importexport.dao.AchievementsDao">
	<resultMap id="AchievementsMap" type="com.hidm.importexport.entity.AchievementsPrice">
		<id column="id" property="id" />
		<result column="werks" property="werks" />
		<result column="lgort" property="lgort" />
		<result column="matnr1" property="matnr" />
		<result column="maktx" property="maktx" />
		<result column="zqcsl" property="zqcsl" />
		<result column="zqmsl" property="zqmsl" />
		<result column="zshsl" property="zshsl" />
		<result column="zfhsl" property="zfhsl" />
		<result column="cdate" property="cdate" />
		<result column="stprs" property="stprs" />
		<result column="wgbez" property="wgbez" />
		<result column="matkl" property="matkl" />
		<result column="meins" property="meins" />
	</resultMap>
	<resultMap id="InventoryMap" type="com.hidm.importexport.entity.InventoryResult">
		<result column="type" property="materialType" />
		<result column="budat" property="date" />
		<result column="bwart" property="bwart" />
		<result column="erfmg" property="erfmg" />
		<result column="vprsv" property="vprsv" />
		<result column="stprs" property="stprs" />
		<result column="verpr" property="verpr" />
		<result column="maktx" property="maktx" />
		<result column="matnr" property="matnr" />
	</resultMap>
	<select id="selectInventoryAll" resultMap="AchievementsMap">
		SELECT * FROM
		T_INVENTORY
	</select>
	<select id="getAchievement" resultMap="AchievementsMap">
	 select distinct sd.*,q.meins
    FROM (select z.werks, z.lgort,
    s.matnr1,s.matnr, z.maktx, z.zqcsl,
    z.zqmsl, z.zshsl, z.zfhsl, z.cdate ,s.stprs ,s.wgbez,s.matkl
    from T_ACHIEVEMENTS z 
    left JOIN T_MATERIAL s
    ON z.matnr=s.matnr1  and z.werks = s.werks
    where z.matnr not like 'H%' and z.matnr not like 'M%' and z.matnr not like 'N%' and s.wgbez not like ' ')  sd
    left JOIN T_MATERIAL q
    ON q.matnr1=sd.matnr1
	</select>
	<insert id="insertAchievements" parameterType="java.lang.Long">
		<selectKey resultType="java.lang.Long" order="BEFORE"
			keyProperty="id">
			SELECT T_ACHIEVEMENTS_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		insert into T_ACHIEVEMENTS
		(id, werks, lgort, matnr, maktx, zqcsl,
		zqmsl, zshsl, zfhsl, cdate)
		select T_ACHIEVEMENTS_SEQ.nextval, A.*
		FROM (
		<foreach collection="list" item="item" index="index" separator="union all">
			select
			#{item.werks, jdbcType=VARCHAR}, 
			#{item.lgort, jdbcType=VARCHAR},
			#{item.matnr, jdbcType=VARCHAR}, 
			#{item.maktx, jdbcType=VARCHAR},
			#{item.zqcsl, jdbcType=VARCHAR}, 
			#{item.zqmsl, jdbcType=VARCHAR},
			#{item.zshsl, jdbcType=VARCHAR}, 
			#{item.zfhsl, jdbcType=VARCHAR},
			#{item.cdate, jdbcType=VARCHAR}
			from
			dual
		</foreach>
		) A
	</insert>
	<insert id="insertAchievementsHis" parameterType="java.lang.Long">
		<selectKey resultType="java.lang.Long" order="BEFORE"
			keyProperty="id">
			SELECT T_ACHIEVEMENTS_HIS_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		insert into T_ACHIEVEMENTS_HIS
		(id, werks, lgort, matnr, maktx, zqcsl,
		zqmsl, zshsl, zfhsl, cdate )
		select T_ACHIEVEMENTS_HIS_SEQ.nextval, A.*
		FROM (
		<foreach collection="list" item="item" index="index"
			separator="union all">
			select
			#{item.werks, jdbcType=VARCHAR}, 
			#{item.lgort, jdbcType=VARCHAR},
			#{item.matnr, jdbcType=VARCHAR}, 
			#{item.maktx, jdbcType=VARCHAR},
			#{item.zqcsl, jdbcType=VARCHAR}, 
			#{item.zqmsl, jdbcType=VARCHAR},
			#{item.zshsl, jdbcType=VARCHAR}, 
			#{item.zfhsl, jdbcType=VARCHAR},
			#{item.cdate, jdbcType=VARCHAR}
			from
			dual
		</foreach>
		) A
	</insert>
		<delete id="delAchievementsHis">
		delete from T_ACHIEVEMENTS_HIS t
		where to_char(t.update_time,'yyyy-MM-dd')&lt; to_char(sysdate-1,'yyyy-MM-dd')
	</delete>
	<delete id="delAchievements">
		delete from T_ACHIEVEMENTS
	</delete>
</mapper>